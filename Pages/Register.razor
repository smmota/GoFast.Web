@page "/register"

@using GoFast.UI.DTO;
@using GoFast.UI.Services.Authentication;

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Cadastre-se</h1>

@if (ShowErrors)
{
    <DisplayMessage ErrorMessage="@Errors" />

    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Credenciais</h5>
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mt-2">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                <ValidationMessage For="@(() => RegisterModel.Email)" />
            </div>
            <div class="form-group mt-2">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control"
                           @bind-Value="RegisterModel.Password" />
                <ValidationMessage For="@(() => RegisterModel.Password)" />
            </div>
            <div class="form-group mt-2">
                <label for="password">Confirm Password</label>
                <InputText Id="password" type="password" class="form-control"
                           @bind-Value="RegisterModel.ConfirmPassword" />
                <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary mt-2">Cadastrar</button>
        </EditForm>
    </div>
</div>

@code {

    private RegisterDTO RegisterModel = new RegisterDTO();
    private bool ShowErrors;
    private List<string> Errors = new List<string>();

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(RegisterModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {            
            Errors.AddRange(result.Errors);
            ShowErrors = true;
        }
    }
}